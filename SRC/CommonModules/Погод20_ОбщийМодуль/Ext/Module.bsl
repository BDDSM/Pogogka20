// Функция - Локация организации
//
// Параметры:
//  рефОрганизация	 - СправочникСсылка - (IN) Cсылка на организацию
//  стЛокация		 - Структура - (OUT) Структура с данными:
//		* СтранаНаименование - Строка - Наименование страны
//		* СтранаКодАльфа - Строка - Код страны по Альфа-2
//		* Область - Строка - Наименование области без префикса
//		* Город - Строка- Наименование города, населенного пункта или города федерального значения
// 
// Возвращаемое значение:
//  Булево - признак успешного выполнения
//
Функция ЛокацияОрганизации(Знач рефОрганизация, стЛокация) Экспорт
	Перем бВыполненоБезОшибок;
	Перем тзКИ, рефВидКИ, сАдрXML;
	Перем стОписаниеСтраны, стОписаниеАдреса, стПараметры;
	
	бВыполненоБезОшибок = Ложь;
	
	стЛокация = Новый Структура();
	стЛокация.Вставить("СтранаНаименование","");
	стЛокация.Вставить("СтранаКодАльфа","");
	стЛокация.Вставить("Область","");
	стЛокация.Вставить("Город","");
	
	Если ТипЗнч(рефОрганизация) <> Тип("СправочникСсылка.Организации") Тогда
		Возврат бВыполненоБезОшибок;
	КонецЕсли;
	
	рефВидКИ = Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации;
	тзКИ = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(рефОрганизация,рефВидКИ,,Ложь);
	Если ТипЗнч(тзКИ) = Тип("ТаблицаЗначений") И тзКИ.Количество() > 0 Тогда
		сАдрXML = тзКИ[0].ЗначенияПолей;
	Иначе
		Возврат бВыполненоБезОшибок;
	КонецЕсли;
	
	Попытка
		стОписаниеСтраны = УправлениеКонтактнойИнформацией.СтранаАдресаКонтактнойИнформации(сАдрXML);
	Исключение
	    Возврат бВыполненоБезОшибок;
	КонецПопытки;
	
	Если ТипЗнч(стОписаниеСтраны) <> Тип("Структура") 
			ИЛИ НЕ стОписаниеСтраны.Свойство("Наименование") 
			ИЛИ НЕ стОписаниеСтраны.Свойство("КодАльфа2") Тогда
		Возврат бВыполненоБезОшибок;
	КонецЕсли;
	стЛокация.СтранаНаименование = стОписаниеСтраны.Наименование;
	стЛокация.СтранаКодАльфа = стОписаниеСтраны.КодАльфа2;
	
	стПараметры = Новый Структура();
	стПараметры.Вставить("БезПредставлений", Истина);
	стПараметры.Вставить("КодыКЛАДР", Ложь);
	стПараметры.Вставить("ПолныеНаименованияСокращений", Ложь);
	стПараметры.Вставить("НаименованиеВключаетСокращение", Ложь);
	
	Попытка
		стОписаниеАдреса = РаботаСАдресами.СведенияОбАдресе(сАдрXML, стПараметры);
	Исключение
	    Возврат бВыполненоБезОшибок;
	КонецПопытки;
	
	Если ТипЗнч(стОписаниеАдреса) <> Тип("Структура") Тогда
		Возврат бВыполненоБезОшибок;
	Иначе
		стЛокация.Область = ОбластьЛокации(стОписаниеАдреса);
		стЛокация.Город = ГородЛокации(стОписаниеАдреса);
	КонецЕсли;
	
	Возврат бВыполненоБезОшибок;
КонецФункции

Функция ГородЛокации(стОписаниеАдреса)
	Перем сГород;
	
	Возврат сГород;
КонецФункции

Функция ОбластьЛокации(Знач стОписаниеАдреса)
	Перем сОбласть, сзГородаФедЗначения;
	
	сОбласть = "";
	
	Если стОписаниеАдреса.Свойство("КодРегиона") И ГородФедЗначения(стОписаниеАдреса) Тогда
		сОбласть = "";
	Иначе
		сОбласть = ?(стОписаниеАдреса.Свойство("Регион"), стОписаниеАдреса.Регион, "");
	КонецЕсли;
	
	Возврат сОбласть;
КонецФункции

Функция ГородФедЗначения(Знач стОписаниеАдреса)
	Перем бГородФедЗначения;
	
	бГородФедЗначения = Ложь;
	Если ТипЗнч(стОписаниеАдреса) <> Тип("Структура") ИЛИ НЕ стОписаниеАдреса.Свойство("КодРегиона")Тогда
		Возврат бГородФедЗначения;
	КонецЕсли;
	
	сзГородаФедЗначения = Новый СписокЗначений();
	сзГородаФедЗначения.Добавить("77", "Москва");
	сзГородаФедЗначения.Добавить("78", "Санкт-Петербург");
	сзГородаФедЗначения.Добавить("92", "Севастополь");
	
	Если сзГородаФедЗначения.НайтиПоЗначению(стОписаниеАдреса.КодРегиона) <> Неопределено Тогда
		бГородФедЗначения = Истина;
	КонецЕсли;
	
	Возврат бГородФедЗначения;
КонецФункции



// Функция - Данные погоды для заполнения виджета
//
// Параметры:
//  стЛокация	 - Структура - (IN) Данные локации организации
//  стДанные	 - Структура - (IN/OUT) Данные погоды
// 
// Возвращаемое значение:
//  Булево - признак успешного выполнения
//
Функция ДанныеПогоды(Знач стЛокация, стДанные) Экспорт
	Перем бВыполненоБезОшибок;
	
	бВыполненоБезОшибок = Истина;
	
	Возврат бВыполненоБезОшибок;
КонецФункции
